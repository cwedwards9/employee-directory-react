{"version":3,"sources":["components/Header.js","components/Employee.js","components/EmployeeList.js","components/SearchEmployee.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Component","Employee","this","props","employee","name","email","phone","picture","scope","src","thumbnail","alt","first","last","EmployeeList","state","employees","axios","get","then","response","setState","data","results","console","log","map","cell","scopr","SearchEmployee","placeholder","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAceA,G,6KATP,OACI,sBAAKC,UAAU,SAAf,UACI,oDACA,0E,GALKC,cCcNC,E,uKAdD,IAAD,EACmCC,KAAKC,MAAMC,SAA3CC,EADH,EACGA,KAAMC,EADT,EACSA,MAAOC,EADhB,EACgBA,MAAOC,EADvB,EACuBA,QAC5B,OACI,+BACI,oBAAIC,MAAM,MAAV,SAAgB,qBAAKC,IAAKF,EAAQG,UAAWC,IAAG,UAAKP,EAAKQ,MAAV,YAAmBR,EAAKS,UACxE,6BAAKT,EAAKQ,QACV,6BAAKR,EAAKS,OACV,6BAAKP,IACL,6BAAKD,W,GATEN,a,iBCyCRe,E,kDArCX,WAAYZ,GAAQ,IAAD,8BACf,cAAMA,IACDa,MAAQ,CAAEC,UAAW,IAFX,E,gEAIE,IAAD,OAEhBC,IAAMC,IATF,gDASWC,MAAK,SAAAC,GAChB,EAAKC,SAAS,CAACL,UAAWI,EAASE,KAAKC,UACxCC,QAAQC,IAAIL,EAASE,KAAKC,c,+BAK9B,IAAMP,EAAYf,KAAKc,MAAMC,UAAUU,KAAI,SAAAvB,GAAQ,OAC/C,cAAC,EAAD,CAA8BA,SAAUA,GAAzBA,EAASwB,SAE5B,OACI,qBAAK7B,UAAU,eAAf,SACI,wBAAOA,UAAU,sBAAjB,UACI,gCACI,+BACI,oBAAIU,MAAM,MAAV,2BACA,oBAAIA,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIoB,MAAM,MAAV,mBACA,oBAAIpB,MAAM,MAAV,wBAGR,gCACKQ,a,GA9BEjB,aCWZ8B,E,uKAXP,OACI,qBAAK/B,UAAU,iBAAf,SACI,iCACI,uBAAOgC,YAAY,wBACnB,qD,GANS/B,aCedgC,G,6KAVX,OACE,sBAAKjC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GANUC,cCMHiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.01a3cb8b.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport \"./Header.css\";\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Header\">\r\n                <h1>Employee Directory</h1>\r\n                <p>Welcome to the employee directory!</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, {Component} from \"react\";\r\n\r\nclass Employee extends Component {\r\n    render() {\r\n        const { name, email, phone, picture } = this.props.employee;\r\n        return (\r\n            <tr>\r\n                <th scope=\"row\"><img src={picture.thumbnail} alt={`${name.first} ${name.last}`}/></th>\r\n                <td>{name.first}</td>\r\n                <td>{name.last}</td>\r\n                <td>{phone}</td>\r\n                <td>{email}</td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Employee;","import React, {Component} from \"react\";\r\nimport Employee from \"./Employee\";\r\nimport axios from \"axios\";\r\nconst URL = \"https://randomuser.me/api/?nat=US&results=50\";\r\n\r\nclass EmployeeList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { employees: [] };\r\n    }\r\n    componentDidMount() {\r\n        // load data\r\n        axios.get(URL).then(response => {\r\n            this.setState({employees: response.data.results})\r\n            console.log(response.data.results)      \r\n        })\r\n    }\r\n\r\n    render() {\r\n        const employees = this.state.employees.map(employee => (\r\n            <Employee key={employee.cell} employee={employee}/>\r\n        ))\r\n        return (\r\n            <div className=\"EmployeeList\">\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Profile Photo</th>\r\n                            <th scope=\"col\">First Name</th>\r\n                            <th scope=\"col\">Last Name</th>\r\n                            <th scopr=\"col\">Phone</th>\r\n                            <th scope=\"col\">Email</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {employees}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EmployeeList;","import React, {Component} from \"react\";\r\n\r\n\r\nclass SearchEmployee extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"SearchEmployee\">\r\n                <form>\r\n                    <input placeholder=\"Find an employee...\"/>\r\n                    <button>Search</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchEmployee;","import React, {Component} from \"react\";\nimport Header from \"./components/Header\";\nimport EmployeeList from \"./components/EmployeeList\";\nimport SearchEmployee from \"./components/SearchEmployee\";\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <SearchEmployee />\n        <EmployeeList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}